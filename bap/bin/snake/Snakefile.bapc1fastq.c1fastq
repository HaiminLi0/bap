import os
import subprocess
import shutil
import pysam
from os.path import join

configfile: config["cfp"]     
outdir = config["output"]
name = config["name"]
script_dir = config["script_dir"]          
samtools = "samtools"

# A Snakemake regular expression matching the bam file paths
SAMPLES, = glob_wildcards(join(outdir, ".internal/samples/{sample}.fastqs.txt"))
fastqstxtin = '{sample}.fastqs.txt'

oneSample_py = script_dir + "/bin/python/00_oneSample.py"

rule all:
	input:
		outdir + "/" +name+".merged.bam.bai"

rule process_one_sample:
	input:
		txtin = join(outdir + "/.internal/samples", fastqstxtin)
	output:
		bam = outdir + "/03_processed_reads/{sample}.st.anno.bam"
	threads:
		4
	run:
		# Get sample information
		sample = output.bam.replace(outdir + "/03_processed_reads/", "").replace(".st.anno.bam", "")
		with open(input.txtin) as f:
			line1 = f.read()
			fastq1 = line1.split("\t")[0].strip()
			fastq2 = line1.split("\t")[1].strip()
		
		# Process one samle
		pycall = " ".join(['python', oneSample_py, config["cfp"], fastq1, fastq2, sample])
		os.system(pycall)

# Collate everything
rule merge_all:
	input:
		bams = expand(outdir + "/03_processed_reads/{sample}.st.anno.bam", sample=SAMPLES)
	output:
		outdir + "/" +name+".merged.bam.bai"
	run: 	
		# merge via pysam or something
		finalmergedbam = outdir + "/"+name+".merged.bam"
		os.system(samtools + " merge " +finalmergedbam+" "+ outdir + "/03_processed_reads/*.bam")
		pysam.index(finalmergedbam)
